{"ast":null,"code":"import { initializeApp } from 'firebase/app';\nimport { getAuth, signInWithRedirect, signInWithPopup, GoogleAuthProvider } from 'firebase/auth';\nimport { getFirestore, doc, getDoc, setDoc } from 'firebase/firestore';\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDmC0P5rRE6ltqQ5NfswDo7vFFgam_NZnI\",\n  authDomain: \"crown-clothing-db-befb5.firebaseapp.com\",\n  projectId: \"crown-clothing-db-befb5\",\n  storageBucket: \"crown-clothing-db-befb5.appspot.com\",\n  messagingSenderId: \"208004956890\",\n  appId: \"1:208004956890:web:dfb277d6cc93a18ac11be3\"\n};\n\n// Initialize Firebase\nconst firebaseApp = initializeApp(firebaseConfig);\nconst provider = new GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: \"select_account\"\n});\nexport const auth = getAuth();\nexport const signInWithGooglePopup = () => signInWithPopup(auth, provider);\nexport const db = getFirestore();\nexport const createUserDocumentFromAuth = async userAuth => {\n  const userDocRef = doc(db, 'users', userAuth.uid);\n  console.log(userDocRef);\n  const userSnapshot = await getDoc(userDocRef);\n  console.log(userSnapshot);\n  console.log(userSnapshot.exists());\n  if (!userSnapshot.exists()) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n    try {\n      await setDoc(userDocRef, {\n        displayName,\n        email,\n        createdAt\n      });\n    } catch (error) {\n      console.log('error creating the user', error.message);\n    }\n  }\n  return userDocRef;\n};","map":{"version":3,"names":["initializeApp","getAuth","signInWithRedirect","signInWithPopup","GoogleAuthProvider","getFirestore","doc","getDoc","setDoc","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseApp","provider","setCustomParameters","prompt","auth","signInWithGooglePopup","db","createUserDocumentFromAuth","userAuth","userDocRef","uid","console","log","userSnapshot","exists","displayName","email","createdAt","Date","error","message"],"sources":["D:/E-kart/crwn-clothing/src/utils/firebase/firebase.utils.js"],"sourcesContent":["import { initializeApp} from 'firebase/app';\r\nimport { getAuth , signInWithRedirect , signInWithPopup , GoogleAuthProvider} from 'firebase/auth';\r\n\r\nimport { getFirestore ,doc, getDoc,setDoc} from 'firebase/firestore';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyDmC0P5rRE6ltqQ5NfswDo7vFFgam_NZnI\",\r\n    authDomain: \"crown-clothing-db-befb5.firebaseapp.com\",\r\n    projectId: \"crown-clothing-db-befb5\",\r\n    storageBucket: \"crown-clothing-db-befb5.appspot.com\",\r\n    messagingSenderId: \"208004956890\",\r\n    appId: \"1:208004956890:web:dfb277d6cc93a18ac11be3\"\r\n  };\r\n  \r\n  // Initialize Firebase\r\n  const firebaseApp = initializeApp(firebaseConfig);\r\n\r\n  const provider = new GoogleAuthProvider();\r\n\r\n  provider.setCustomParameters({\r\n    prompt : \"select_account\"\r\n  });\r\n\r\nexport const  auth  = getAuth();\r\nexport const signInWithGooglePopup = () => signInWithPopup(auth,provider);\r\n\r\nexport const db  = getFirestore();\r\n\r\nexport const createUserDocumentFromAuth = async (userAuth) =>{\r\n    const userDocRef = doc(db, 'users',userAuth.uid);\r\n\r\n    console.log(userDocRef);\r\n    \r\n    const userSnapshot = await getDoc(userDocRef);\r\n    console.log(userSnapshot);\r\n    console.log(userSnapshot.exists());\r\n\r\n    if(!userSnapshot.exists()){\r\n        const {displayName, email} = userAuth;\r\n        const createdAt = new Date(); \r\n\r\n        try {\r\n            await setDoc(userDocRef , {\r\n                displayName,\r\n                email,\r\n                createdAt\r\n            });\r\n        }\r\n        catch (error) {\r\n            console.log('error creating the user', error.message);\r\n        }\r\n    }\r\n    return userDocRef;\r\n};"],"mappings":"AAAA,SAASA,aAAa,QAAO,cAAc;AAC3C,SAASC,OAAO,EAAGC,kBAAkB,EAAGC,eAAe,EAAGC,kBAAkB,QAAO,eAAe;AAElG,SAASC,YAAY,EAAEC,GAAG,EAAEC,MAAM,EAACC,MAAM,QAAO,oBAAoB;AAEpE,MAAMC,cAAc,GAAG;EACnBC,MAAM,EAAE,yCAAyC;EACjDC,UAAU,EAAE,yCAAyC;EACrDC,SAAS,EAAE,yBAAyB;EACpCC,aAAa,EAAE,qCAAqC;EACpDC,iBAAiB,EAAE,cAAc;EACjCC,KAAK,EAAE;AACT,CAAC;;AAED;AACA,MAAMC,WAAW,GAAGhB,aAAa,CAACS,cAAc,CAAC;AAEjD,MAAMQ,QAAQ,GAAG,IAAIb,kBAAkB,EAAE;AAEzCa,QAAQ,CAACC,mBAAmB,CAAC;EAC3BC,MAAM,EAAG;AACX,CAAC,CAAC;AAEJ,OAAO,MAAOC,IAAI,GAAInB,OAAO,EAAE;AAC/B,OAAO,MAAMoB,qBAAqB,GAAG,MAAMlB,eAAe,CAACiB,IAAI,EAACH,QAAQ,CAAC;AAEzE,OAAO,MAAMK,EAAE,GAAIjB,YAAY,EAAE;AAEjC,OAAO,MAAMkB,0BAA0B,GAAG,MAAOC,QAAQ,IAAI;EACzD,MAAMC,UAAU,GAAGnB,GAAG,CAACgB,EAAE,EAAE,OAAO,EAACE,QAAQ,CAACE,GAAG,CAAC;EAEhDC,OAAO,CAACC,GAAG,CAACH,UAAU,CAAC;EAEvB,MAAMI,YAAY,GAAG,MAAMtB,MAAM,CAACkB,UAAU,CAAC;EAC7CE,OAAO,CAACC,GAAG,CAACC,YAAY,CAAC;EACzBF,OAAO,CAACC,GAAG,CAACC,YAAY,CAACC,MAAM,EAAE,CAAC;EAElC,IAAG,CAACD,YAAY,CAACC,MAAM,EAAE,EAAC;IACtB,MAAM;MAACC,WAAW;MAAEC;IAAK,CAAC,GAAGR,QAAQ;IACrC,MAAMS,SAAS,GAAG,IAAIC,IAAI,EAAE;IAE5B,IAAI;MACA,MAAM1B,MAAM,CAACiB,UAAU,EAAG;QACtBM,WAAW;QACXC,KAAK;QACLC;MACJ,CAAC,CAAC;IACN,CAAC,CACD,OAAOE,KAAK,EAAE;MACVR,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEO,KAAK,CAACC,OAAO,CAAC;IACzD;EACJ;EACA,OAAOX,UAAU;AACrB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}