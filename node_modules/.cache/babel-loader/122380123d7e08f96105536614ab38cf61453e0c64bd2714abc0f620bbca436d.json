{"ast":null,"code":"import { initializeApp } from 'firebase/app';\nimport { getAuth, signInWithRedirect, signInWithPopup, GoogleAuthProvider, createUserWithEmailAndPassword, signInWithEmailAndPassword, signOut } from 'firebase/auth';\nimport { getFirestore, doc, getDoc, setDoc } from 'firebase/firestore';\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDmC0P5rRE6ltqQ5NfswDo7vFFgam_NZnI\",\n  authDomain: \"crown-clothing-db-befb5.firebaseapp.com\",\n  projectId: \"crown-clothing-db-befb5\",\n  storageBucket: \"crown-clothing-db-befb5.appspot.com\",\n  messagingSenderId: \"208004956890\",\n  appId: \"1:208004956890:web:dfb277d6cc93a18ac11be3\"\n};\n\n// Initialize Firebase\nconst firebaseApp = initializeApp(firebaseConfig);\nconst googleProvider = new GoogleAuthProvider();\ngoogleProvider.setCustomParameters({\n  prompt: \"select_account\"\n});\nexport const auth = getAuth();\nexport const signInWithGooglePopup = () => signInWithPopup(auth, googleProvider);\nexport const signInWithGoogleRedirect = () => signInWithRedirect(auth, googleProvider);\nexport const db = getFirestore();\nexport const createUserDocumentFromAuth = async function (userAuth) {\n  let additionalInformation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  if (!userAuth) return;\n  const userDocRef = doc(db, 'users', userAuth.uid);\n  const userSnapshot = await getDoc(userDocRef);\n  if (!userSnapshot.exists()) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n    try {\n      await setDoc(userDocRef, {\n        displayName,\n        email,\n        createdAt,\n        ...additionalInformation\n      });\n    } catch (error) {\n      console.log('error creating the user', error.message);\n    }\n  }\n  return userDocRef;\n};\nexport const createAuthUserWithEmailAndPassword = async (email, password) => {\n  if (!email || !password) return;\n  return await createUserWithEmailAndPassword(auth, email, password);\n};\nexport const signInAuthUserWithEmailAndPassword = async (email, password) => {\n  if (!email || !password) return;\n  return await signInWithEmailAndPassword(auth, email, password);\n};\nexport const signOutUser = () => signOut(auth);","map":{"version":3,"names":["initializeApp","getAuth","signInWithRedirect","signInWithPopup","GoogleAuthProvider","createUserWithEmailAndPassword","signInWithEmailAndPassword","signOut","getFirestore","doc","getDoc","setDoc","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseApp","googleProvider","setCustomParameters","prompt","auth","signInWithGooglePopup","signInWithGoogleRedirect","db","createUserDocumentFromAuth","userAuth","additionalInformation","userDocRef","uid","userSnapshot","exists","displayName","email","createdAt","Date","error","console","log","message","createAuthUserWithEmailAndPassword","password","signInAuthUserWithEmailAndPassword","signOutUser"],"sources":["D:/E-kart/crwn-clothing/src/utils/firebase/firebase.utils.js"],"sourcesContent":["import { initializeApp} from 'firebase/app';\r\nimport { getAuth , signInWithRedirect , signInWithPopup , GoogleAuthProvider\r\n    , createUserWithEmailAndPassword, signInWithEmailAndPassword, signOut} from 'firebase/auth';\r\n\r\nimport { getFirestore ,doc, getDoc,setDoc} from 'firebase/firestore';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyDmC0P5rRE6ltqQ5NfswDo7vFFgam_NZnI\",\r\n    authDomain: \"crown-clothing-db-befb5.firebaseapp.com\",\r\n    projectId: \"crown-clothing-db-befb5\",\r\n    storageBucket: \"crown-clothing-db-befb5.appspot.com\",\r\n    messagingSenderId: \"208004956890\",\r\n    appId: \"1:208004956890:web:dfb277d6cc93a18ac11be3\"\r\n  };\r\n  \r\n  // Initialize Firebase\r\n  const firebaseApp = initializeApp(firebaseConfig);\r\n\r\n  const googleProvider = new GoogleAuthProvider();\r\n\r\n  googleProvider.setCustomParameters({\r\n    prompt : \"select_account\"\r\n  });\r\n\r\nexport const  auth  = getAuth();\r\nexport const signInWithGooglePopup = () => signInWithPopup(auth,googleProvider);\r\nexport const signInWithGoogleRedirect = () => signInWithRedirect(auth,googleProvider); \r\n\r\nexport const db  = getFirestore();\r\n\r\nexport const createUserDocumentFromAuth = async (userAuth,additionalInformation={}) =>{\r\n    if(!userAuth)return;\r\n\r\n    const userDocRef = doc(db, 'users',userAuth.uid);\r\n    \r\n    const userSnapshot = await getDoc(userDocRef);\r\n\r\n    if(!userSnapshot.exists()){\r\n        const {displayName, email} = userAuth;\r\n        const createdAt = new Date(); \r\n\r\n        try {\r\n            await setDoc(userDocRef , {\r\n                displayName,\r\n                email,\r\n                createdAt,\r\n                ...additionalInformation,\r\n            });\r\n        }\r\n        catch (error) {\r\n            console.log('error creating the user', error.message);\r\n        }\r\n    }\r\n    return userDocRef;\r\n};\r\n\r\nexport const createAuthUserWithEmailAndPassword = async (email,password) =>{\r\n\r\n    if(!email || !password) return;\r\n\r\n    return await createUserWithEmailAndPassword(auth,email,password);\r\n};\r\n\r\nexport const signInAuthUserWithEmailAndPassword = async (email,password) =>{\r\n\r\n    if(!email || !password) return;\r\n\r\n    return await signInWithEmailAndPassword(auth,email,password);\r\n};\r\n\r\nexport const signOutUser = () => signOut(auth);"],"mappings":"AAAA,SAASA,aAAa,QAAO,cAAc;AAC3C,SAASC,OAAO,EAAGC,kBAAkB,EAAGC,eAAe,EAAGC,kBAAkB,EACtEC,8BAA8B,EAAEC,0BAA0B,EAAEC,OAAO,QAAO,eAAe;AAE/F,SAASC,YAAY,EAAEC,GAAG,EAAEC,MAAM,EAACC,MAAM,QAAO,oBAAoB;AAEpE,MAAMC,cAAc,GAAG;EACnBC,MAAM,EAAE,yCAAyC;EACjDC,UAAU,EAAE,yCAAyC;EACrDC,SAAS,EAAE,yBAAyB;EACpCC,aAAa,EAAE,qCAAqC;EACpDC,iBAAiB,EAAE,cAAc;EACjCC,KAAK,EAAE;AACT,CAAC;;AAED;AACA,MAAMC,WAAW,GAAGnB,aAAa,CAACY,cAAc,CAAC;AAEjD,MAAMQ,cAAc,GAAG,IAAIhB,kBAAkB,EAAE;AAE/CgB,cAAc,CAACC,mBAAmB,CAAC;EACjCC,MAAM,EAAG;AACX,CAAC,CAAC;AAEJ,OAAO,MAAOC,IAAI,GAAItB,OAAO,EAAE;AAC/B,OAAO,MAAMuB,qBAAqB,GAAG,MAAMrB,eAAe,CAACoB,IAAI,EAACH,cAAc,CAAC;AAC/E,OAAO,MAAMK,wBAAwB,GAAG,MAAMvB,kBAAkB,CAACqB,IAAI,EAACH,cAAc,CAAC;AAErF,OAAO,MAAMM,EAAE,GAAIlB,YAAY,EAAE;AAEjC,OAAO,MAAMmB,0BAA0B,GAAG,gBAAOC,QAAQ,EAA6B;EAAA,IAA5BC,qBAAqB,uEAAC,CAAC,CAAC;EAC9E,IAAG,CAACD,QAAQ,EAAC;EAEb,MAAME,UAAU,GAAGrB,GAAG,CAACiB,EAAE,EAAE,OAAO,EAACE,QAAQ,CAACG,GAAG,CAAC;EAEhD,MAAMC,YAAY,GAAG,MAAMtB,MAAM,CAACoB,UAAU,CAAC;EAE7C,IAAG,CAACE,YAAY,CAACC,MAAM,EAAE,EAAC;IACtB,MAAM;MAACC,WAAW;MAAEC;IAAK,CAAC,GAAGP,QAAQ;IACrC,MAAMQ,SAAS,GAAG,IAAIC,IAAI,EAAE;IAE5B,IAAI;MACA,MAAM1B,MAAM,CAACmB,UAAU,EAAG;QACtBI,WAAW;QACXC,KAAK;QACLC,SAAS;QACT,GAAGP;MACP,CAAC,CAAC;IACN,CAAC,CACD,OAAOS,KAAK,EAAE;MACVC,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEF,KAAK,CAACG,OAAO,CAAC;IACzD;EACJ;EACA,OAAOX,UAAU;AACrB,CAAC;AAED,OAAO,MAAMY,kCAAkC,GAAG,OAAOP,KAAK,EAACQ,QAAQ,KAAI;EAEvE,IAAG,CAACR,KAAK,IAAI,CAACQ,QAAQ,EAAE;EAExB,OAAO,MAAMtC,8BAA8B,CAACkB,IAAI,EAACY,KAAK,EAACQ,QAAQ,CAAC;AACpE,CAAC;AAED,OAAO,MAAMC,kCAAkC,GAAG,OAAOT,KAAK,EAACQ,QAAQ,KAAI;EAEvE,IAAG,CAACR,KAAK,IAAI,CAACQ,QAAQ,EAAE;EAExB,OAAO,MAAMrC,0BAA0B,CAACiB,IAAI,EAACY,KAAK,EAACQ,QAAQ,CAAC;AAChE,CAAC;AAED,OAAO,MAAME,WAAW,GAAG,MAAMtC,OAAO,CAACgB,IAAI,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}