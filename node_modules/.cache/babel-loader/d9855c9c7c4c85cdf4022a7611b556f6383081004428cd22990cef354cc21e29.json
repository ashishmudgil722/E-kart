{"ast":null,"code":"import { initializeApp } from 'firebase/app';\nimport { getAuth, signInWithRedirect, signInWithPopup, GoogleAuthProvider, createUserWithEmailAndPassword, signInWithEmailAndPassword, signOut, onAuthStateChanged } from 'firebase/auth';\nimport { getFirestore, doc, getDoc, setDoc, collection, writeBatch, query, getDocs } from 'firebase/firestore';\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDmC0P5rRE6ltqQ5NfswDo7vFFgam_NZnI\",\n  authDomain: \"crown-clothing-db-befb5.firebaseapp.com\",\n  projectId: \"crown-clothing-db-befb5\",\n  storageBucket: \"crown-clothing-db-befb5.appspot.com\",\n  messagingSenderId: \"208004956890\",\n  appId: \"1:208004956890:web:dfb277d6cc93a18ac11be3\"\n};\n\n// Initialize Firebase\nconst firebaseApp = initializeApp(firebaseConfig);\nconst googleProvider = new GoogleAuthProvider();\ngoogleProvider.setCustomParameters({\n  prompt: \"select_account\"\n});\nexport const auth = getAuth();\nexport const signInWithGooglePopup = () => signInWithPopup(auth, googleProvider);\nexport const signInWithGoogleRedirect = () => signInWithRedirect(auth, googleProvider);\nexport const db = getFirestore();\nexport const addCollectionAndDocuments = async (collectionKey, objectsToAdd, field) => {\n  const collectionRef = collection(db, collectionKey);\n  const batch = writeBatch(db);\n  objectsToAdd.forEach(object => {\n    const docRef = doc(collectionRef, object.title.toLowerCase());\n    batch.set(docRef, object);\n  });\n  await batch.commit();\n  console.log('done');\n};\nexport const getCategoriesAndDocuments = async () => {\n  const collectionRef = collection(db, 'categories');\n  const q = query(collectionRef);\n  const querySnapshot = await getDocs(q);\n  const categoryMap = querySnapshot.docs.reduce((acc, docSnapshot) => {\n    const {\n      title,\n      items\n    } = docSnapshot.data();\n    acc[title.toLowerCase()] = items;\n    return acc;\n  }, {});\n  return categoryMap;\n};\nexport const createUserDocumentFromAuth = async function (userAuth) {\n  let additionalInformation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  if (!userAuth) return;\n  const userDocRef = doc(db, 'users', userAuth.uid);\n  const userSnapshot = await getDoc(userDocRef);\n  if (!userSnapshot.exists()) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n    try {\n      await setDoc(userDocRef, {\n        displayName,\n        email,\n        createdAt,\n        ...additionalInformation\n      });\n    } catch (error) {\n      console.log('error creating the user', error.message);\n    }\n  }\n  return userDocRef;\n};\nexport const createAuthUserWithEmailAndPassword = async (email, password) => {\n  if (!email || !password) return;\n  return await createUserWithEmailAndPassword(auth, email, password);\n};\nexport const signInAuthUserWithEmailAndPassword = async (email, password) => {\n  if (!email || !password) return;\n  return await signInWithEmailAndPassword(auth, email, password);\n};\nexport const signOutUser = async () => await signOut(auth);\nexport const onAuthStateChangedListener = callback => onAuthStateChanged(auth, callback);","map":{"version":3,"names":["initializeApp","getAuth","signInWithRedirect","signInWithPopup","GoogleAuthProvider","createUserWithEmailAndPassword","signInWithEmailAndPassword","signOut","onAuthStateChanged","getFirestore","doc","getDoc","setDoc","collection","writeBatch","query","getDocs","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseApp","googleProvider","setCustomParameters","prompt","auth","signInWithGooglePopup","signInWithGoogleRedirect","db","addCollectionAndDocuments","collectionKey","objectsToAdd","field","collectionRef","batch","forEach","object","docRef","title","toLowerCase","set","commit","console","log","getCategoriesAndDocuments","q","querySnapshot","categoryMap","docs","reduce","acc","docSnapshot","items","data","createUserDocumentFromAuth","userAuth","additionalInformation","userDocRef","uid","userSnapshot","exists","displayName","email","createdAt","Date","error","message","createAuthUserWithEmailAndPassword","password","signInAuthUserWithEmailAndPassword","signOutUser","onAuthStateChangedListener","callback"],"sources":["D:/E-kart/crwn-clothing/src/utils/firebase/firebase.utils.js"],"sourcesContent":["import { initializeApp} from 'firebase/app';\r\nimport { getAuth , signInWithRedirect , signInWithPopup , GoogleAuthProvider\r\n    , createUserWithEmailAndPassword, signInWithEmailAndPassword, signOut\r\n  , onAuthStateChanged} from 'firebase/auth';\r\n\r\nimport { getFirestore ,doc, getDoc,setDoc, collection, writeBatch,query, getDocs} from 'firebase/firestore';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyDmC0P5rRE6ltqQ5NfswDo7vFFgam_NZnI\",\r\n    authDomain: \"crown-clothing-db-befb5.firebaseapp.com\",\r\n    projectId: \"crown-clothing-db-befb5\",\r\n    storageBucket: \"crown-clothing-db-befb5.appspot.com\",\r\n    messagingSenderId: \"208004956890\",\r\n    appId: \"1:208004956890:web:dfb277d6cc93a18ac11be3\"\r\n  };\r\n  \r\n  // Initialize Firebase\r\n  const firebaseApp = initializeApp(firebaseConfig);\r\n\r\n  const googleProvider = new GoogleAuthProvider();\r\n\r\n  googleProvider.setCustomParameters({\r\n    prompt : \"select_account\"\r\n  });\r\n\r\nexport const  auth  = getAuth();\r\nexport const signInWithGooglePopup = () => signInWithPopup(auth,googleProvider);\r\nexport const signInWithGoogleRedirect = () => signInWithRedirect(auth,googleProvider); \r\n\r\nexport const db  = getFirestore();\r\n\r\nexport const addCollectionAndDocuments = async (collectionKey, objectsToAdd,field) => {\r\n    const collectionRef = collection(db,collectionKey); \r\n    const batch = writeBatch(db);\r\n\r\n\r\n    objectsToAdd.forEach((object) => {\r\n        const docRef = doc(collectionRef,object.title.toLowerCase());\r\n        batch.set(docRef,object);\r\n    });\r\n\r\n    await batch.commit();\r\n    console.log('done');\r\n};\r\n\r\nexport const getCategoriesAndDocuments = async () => {\r\n    const collectionRef = collection(db,'categories');\r\n    const q = query(collectionRef);\r\n\r\n    const querySnapshot = await getDocs(q);\r\n    const categoryMap = querySnapshot.docs.reduce((acc,docSnapshot) => {\r\n        const {title, items } = docSnapshot.data();\r\n        acc[title.toLowerCase()] = items;\r\n        return acc;\r\n    },{});\r\n    return categoryMap;\r\n};\r\n\r\nexport const createUserDocumentFromAuth = async (userAuth,additionalInformation={}) =>{\r\n    if(!userAuth)return;\r\n\r\n    const userDocRef = doc(db, 'users',userAuth.uid);\r\n    \r\n    const userSnapshot = await getDoc(userDocRef);\r\n\r\n    if(!userSnapshot.exists()){\r\n        const {displayName, email} = userAuth;\r\n        const createdAt = new Date(); \r\n\r\n        try {\r\n            await setDoc(userDocRef , {\r\n                displayName,\r\n                email,\r\n                createdAt,\r\n                ...additionalInformation,\r\n            });\r\n        }\r\n        catch (error) {\r\n            console.log('error creating the user', error.message);\r\n        }\r\n    }\r\n    return userDocRef;\r\n};\r\n\r\nexport const createAuthUserWithEmailAndPassword = async (email,password) =>{\r\n\r\n    if(!email || !password) return;\r\n\r\n    return await createUserWithEmailAndPassword(auth,email,password);\r\n};\r\n\r\nexport const signInAuthUserWithEmailAndPassword = async (email,password) =>{\r\n\r\n    if(!email || !password) return;\r\n\r\n    return await signInWithEmailAndPassword(auth,email,password);\r\n};\r\n\r\nexport const signOutUser = async () => await signOut(auth);\r\n\r\nexport const onAuthStateChangedListener = (callback) => onAuthStateChanged(auth, callback);"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}