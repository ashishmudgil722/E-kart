{"ast":null,"code":"var _jsxFileName = \"D:\\\\E-kart\\\\crwn-clothing\\\\src\\\\components\\\\button\\\\button.component.jsx\";\nimport { BaseButton, GoogleSignInButton, InvertedButton } from \"./button.styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const BUTTON_TYPE_CLASSES = {\n  base: 'base',\n  google: 'google-sign-in',\n  inverted: 'inverted'\n};\nconst getButton = function () {\n  let buttonType = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : BUTTON_TYPE_CLASSES.base;\n  return {\n    [BUTTON_TYPE_CLASSES.base]: BaseButton,\n    [BUTTON_TYPE_CLASSES.google]: GoogleSignInButton,\n    [BUTTON_TYPE_CLASSES.inverted]: InvertedButton\n  }[buttonType];\n};\nconst Button = _ref => {\n  let {\n    children,\n    buttonType,\n    ...otherProps\n  } = _ref;\n  const CustomButton = getButton(buttonType);\n  return /*#__PURE__*/_jsxDEV(CustomButton, {\n    ...otherProps,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 12\n  }, this);\n};\n_c = Button;\nexport default Button;\nvar _c;\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"names":["BaseButton","GoogleSignInButton","InvertedButton","BUTTON_TYPE_CLASSES","base","google","inverted","getButton","buttonType","Button","children","otherProps","CustomButton"],"sources":["D:/E-kart/crwn-clothing/src/components/button/button.component.jsx"],"sourcesContent":["import { BaseButton , GoogleSignInButton , InvertedButton } from \"./button.styles\";\r\n\r\nexport const BUTTON_TYPE_CLASSES = {\r\n    base : 'base',\r\n    google: 'google-sign-in',\r\n    inverted: 'inverted'\r\n};\r\n\r\nconst getButton = (buttonType = BUTTON_TYPE_CLASSES.base) => (\r\n    {\r\n        [BUTTON_TYPE_CLASSES.base]: BaseButton,\r\n        [BUTTON_TYPE_CLASSES.google]: GoogleSignInButton,\r\n        [BUTTON_TYPE_CLASSES.inverted]: InvertedButton,\r\n    }[buttonType]\r\n);\r\n\r\nconst Button = ({ children, buttonType , ...otherProps}) => {\r\n    const CustomButton = getButton(buttonType);\r\n    return <CustomButton {...otherProps}>{children}</CustomButton>;\r\n};\r\n\r\nexport default Button;"],"mappings":";AAAA,SAASA,UAAU,EAAGC,kBAAkB,EAAGC,cAAc,QAAQ,iBAAiB;AAAC;AAEnF,OAAO,MAAMC,mBAAmB,GAAG;EAC/BC,IAAI,EAAG,MAAM;EACbC,MAAM,EAAE,gBAAgB;EACxBC,QAAQ,EAAE;AACd,CAAC;AAED,MAAMC,SAAS,GAAG;EAAA,IAACC,UAAU,uEAAGL,mBAAmB,CAACC,IAAI;EAAA,OACpD;IACI,CAACD,mBAAmB,CAACC,IAAI,GAAGJ,UAAU;IACtC,CAACG,mBAAmB,CAACE,MAAM,GAAGJ,kBAAkB;IAChD,CAACE,mBAAmB,CAACG,QAAQ,GAAGJ;EACpC,CAAC,CAACM,UAAU,CAAC;AAAA,CAChB;AAED,MAAMC,MAAM,GAAG,QAA6C;EAAA,IAA5C;IAAEC,QAAQ;IAAEF,UAAU;IAAG,GAAGG;EAAU,CAAC;EACnD,MAAMC,YAAY,GAAGL,SAAS,CAACC,UAAU,CAAC;EAC1C,oBAAO,QAAC,YAAY;IAAA,GAAKG,UAAU;IAAA,UAAGD;EAAQ;IAAA;IAAA;IAAA;EAAA,QAAgB;AAClE,CAAC;AAAC,KAHID,MAAM;AAKZ,eAAeA,MAAM;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}